{"version":3,"sources":["Palette.js","SliderRGB.js","ColorPicker.js","App.js","index.js"],"names":["Palette","change","props","onSelect","color","value","styles","reactCSS","width","height","background","this","display","items","justifyContent","textTransform","cursor","padding","borderBottom","style","onClick","React","Component","SliderRGB","row","slider","flexGrow","marginLeft","col","ref","val","type","min","max","step","onChange","update","className","yellow","rgbHex","require","ColorPicker","changeColor","selection","setState","isPaletteOpen","state","red","green","blue","isRGBOpen","myRGB","rgbhex","ReactDOM","findDOMNode","refs","input","event","domNode","contains","target","document","addEventListener","handleClickOutside","bind","removeEventListener","wrap","position","holder","border","info","btn","borderLeft","rgb","borderStyle","borderWidth","borderColor","marginTop","list","margin","listStyle","right","top","panel","btnHolder","button1","fontSize","button2","onMouseDown","openRGB","openPalette","cancelRGB","closeRGBbtn","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5bb7f6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport reactCSS from 'reactcss';\r\n\r\nexport class Palette extends React.Component {\r\n    change = () => {\r\n        this.props.onSelect({\r\n            color: this.props.color,\r\n            value: this.props.value\r\n        })\r\n    }\r\n    render() {\r\n        const styles = reactCSS({\r\n            'default': {\r\n                color: {\r\n                    width: '20px',\r\n                    height: '20px',\r\n                    background: `${this.props.value}`,\r\n                    display: 'inline-block',\r\n                },\r\n                items: {\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    color: '#97989a',\r\n                    textTransform: 'uppercase',\r\n                    cursor: 'pointer',\r\n                    padding: '10px 15px',\r\n                    borderBottom: '1px solid #f2f2f2',\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <li style={styles.items} color={this.props.color} value={this.props.value} onClick={this.change}>{this.props.color} <span style={styles.color}></span></li>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport reactCSS from 'reactcss';\r\n\r\nexport class SliderRGB extends React.Component {\r\n\r\n    render() {\r\n        const styles = reactCSS({\r\n            'default': {\r\n                row: {\r\n                    color: '#97989a',\r\n                    padding: '10px 0',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                },\r\n                slider: {\r\n                  flexGrow: '1',\r\n                  marginLeft: '10px',\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div style={styles.row}>\r\n                <span>{this.props.col}</span>\r\n                <input style={styles.slider} ref=\"input\"\r\n                       value={this.props.val}\r\n                       type=\"range\"\r\n                       min={this.props.min}\r\n                       max={this.props.max}\r\n                       step={this.props.step}\r\n                       onChange={this.props.update}\r\n                       className={this.props.className}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport reactCSS from 'reactcss';\r\nimport ReactDOM from \"react-dom\";\r\nimport {Palette} from './Palette';\r\nimport {SliderRGB} from './SliderRGB';\r\n\r\nconst red = \"#df212d\";\r\nconst yellow = \"#ffcc33\";\r\nconst green = \"#17a458\";\r\nconst blue = \"#1caee9\";\r\nconst rgbHex = require('rgb-hex');\r\n\r\nexport class ColorPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: yellow,\r\n            red: 255,\r\n            green: 204,\r\n            blue: 51,\r\n            isRGBOpen: false,\r\n            isPaletteOpen: false,\r\n\r\n        };\r\n    }\r\n\r\n    changeColor= selection => {\r\n        this.setState({ ...selection,  isPaletteOpen: !this.state.isPaletteOpen });\r\n    }\r\n\r\n    update() {\r\n        const myRGB = `${this.state.red} , ${this.state.green} , ${this.state.blue}`\r\n        const rgbhex = rgbHex(myRGB)\r\n\r\n        this.setState({\r\n            red: ReactDOM.findDOMNode(this.refs.red.refs.input).value,\r\n            green: ReactDOM.findDOMNode(this.refs.green.refs.input).value,\r\n            blue: ReactDOM.findDOMNode(this.refs.blue.refs.input).value,\r\n\r\n            value: `#${rgbhex}`\r\n        });\r\n    }\r\n\r\n    cancelRGB() {\r\n        this.setState({\r\n            isRGBOpen: !this.state.isRGBOpen,\r\n            value: yellow\r\n        });\r\n    }\r\n\r\n    openRGB(){\r\n        this.setState({isRGBOpen: !this.state.isRGBOpen})\r\n    }\r\n    closeRGBbtn(){\r\n        this.setState({\r\n            isRGBOpen: !this.state.isRGBOpen,\r\n        })\r\n    }\r\n    openPalette (){\r\n        this.setState({isPaletteOpen: !this.state.isPaletteOpen})\r\n    }\r\n\r\n    handleClickOutside(event) {\r\n        const domNode = ReactDOM.findDOMNode(this);\r\n\r\n        if ((!domNode || !domNode.contains(event.target))) {\r\n            this.setState({\r\n                isRGBOpen : false,\r\n                isPaletteOpen : false\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside.bind(this));\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside.bind(this));\r\n    }\r\n\r\n    render() {\r\n\r\n        const styles = reactCSS({\r\n            'default': {\r\n                wrap: {\r\n                    position: 'relative',\r\n                },\r\n                holder: {\r\n                    border: '1px solid #ccc',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    background: 'white',\r\n                },\r\n                info: {\r\n                    padding: '15px',\r\n                    color: '#97989a',\r\n                    textTransform: 'uppercase',\r\n                    flexGrow: '1',\r\n                },\r\n                btn: {\r\n                    padding: '15px',\r\n                    height: '20px',\r\n                    cursor: 'pointer',\r\n                    borderLeft: '1px solid #f2f2f2',\r\n                },\r\n                rgb: {\r\n                    width: '20px',\r\n                    height: '20px',\r\n                    background: `${this.state.value}`,\r\n                    display: 'inline-block',\r\n                },\r\n                color: {\r\n                    width: '0',\r\n                    height: '0',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: ' 10px 10px 0 10px',\r\n                    borderColor: '#97989a transparent transparent transparent',\r\n                    cursor: 'pointer',\r\n                    display: 'inline-block',\r\n                    marginTop: '6px',\r\n                },\r\n                list: {\r\n                    margin: '0',\r\n                    padding: '0',\r\n                    listStyle: 'none',\r\n                    width: '150px',\r\n                    position: 'absolute',\r\n                    right: '0',\r\n                    top: '75px',\r\n                    background: 'white',\r\n                },\r\n                panel: {\r\n                    padding: '15px',\r\n                    width: '250px',\r\n                    position: 'absolute',\r\n                    right: '0',\r\n                    top: '75px',\r\n                    background: 'white',\r\n                },\r\n                btnHolder: {\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                },\r\n                button1: {\r\n                    background: 'd1d2d4',\r\n                    border: '1px solid #c3c3c3',\r\n                    color: '#999a9c',\r\n                    textTransform: 'uppercase',\r\n                    fontSize: '12px',\r\n                    padding: '5px 10px',\r\n                },\r\n                button2: {\r\n                    background: '#6aa458',\r\n                    border: '1px solid #c3c3c3',\r\n                    color: '#fff',\r\n                    textTransform: 'uppercase',\r\n                    marginLeft: '5px',\r\n                    fontSize: '12px',\r\n                    padding: '5px 10px',\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <h2>&lt;ColorPicker /&gt;</h2>\r\n                <div style={styles.wrap}>\r\n                    <div style={styles.holder}>\r\n                        <div style={styles.info}>{this.state.value}</div>\r\n                        <div style={styles.btn} onMouseDown={this.openRGB.bind(this)}>\r\n                            <span style={styles.rgb}></span>\r\n                        </div>\r\n                        <div style={styles.btn} onMouseDown={this.openPalette.bind(this)}>\r\n                            <span style={styles.color}></span>\r\n                        </div>\r\n                        {this.state.isRGBOpen ?\r\n                            <div style={styles.panel} className=\"panel\">\r\n                                <div>\r\n                                    <SliderRGB className=\"rangeRed\" ref=\"red\" min=\"0\" max=\"255\" col=\"R\" val={this.state.red} onChange={this.update} update={() => this.update()}>{this.state.red}</SliderRGB>\r\n                                    <SliderRGB className=\"rangeGreen\" ref=\"green\" min=\"0\" max=\"255\" col=\"G\" val={this.state.green} onChange={this.update} update={() => this.update()}>{this.state.green}</SliderRGB>\r\n                                    <SliderRGB className=\"rangeBlue\" ref=\"blue\" min=\"0\" max=\"255\" col=\"B\" val={this.state.blue} onChange={this.update} update={() => this.update()}>{this.state.blue}</SliderRGB>\r\n                                    <div style={styles.btnHolder}>\r\n                                        <button style={styles.button1} onClick={this.cancelRGB.bind(this)}>Cancel</button>\r\n                                        <button style={styles.button2} onMouseDown={this.closeRGBbtn.bind(this)}>Ok</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                         : null}\r\n                        {this.state.isPaletteOpen ?\r\n                            <ul style={styles.list} className=\"list\">\r\n                                <Palette color='Red' value={red} onSelect={this.changeColor} />\r\n                                <Palette color='Yellow' value={yellow} onSelect={this.changeColor} />\r\n                                <Palette color='Green' value={green} onSelect={this.changeColor} />\r\n                                <Palette color='Blue' value={blue} onSelect={this.changeColor} />\r\n                            </ul>\r\n                        : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {ColorPicker} from './ColorPicker';\r\n\r\nimport \"./App.css\";\r\n\r\n<ColorPicker/>\r\n\r\nexport default ColorPicker","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}